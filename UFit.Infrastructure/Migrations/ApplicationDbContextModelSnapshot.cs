// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UFit.Infrastructure;

#nullable disable

namespace UFit.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UFit.Domain.Trainees.Trainee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FitnessGoal")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("fitness_goal");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("gender");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("phone");

                    b.Property<int>("Points")
                        .HasColumnType("integer")
                        .HasColumnName("points");

                    b.Property<decimal>("TargetWeight")
                        .HasColumnType("numeric")
                        .HasColumnName("target_weight");

                    b.HasKey("Id")
                        .HasName("pk_trainees");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("ix_trainees_email");

                    b.ToTable("trainees", (string)null);
                });

            modelBuilder.Entity("UFit.Domain.Trainees.Trainee", b =>
                {
                    b.OwnsOne("UFit.Domain.Trainees.Measurements", "Measurements", b1 =>
                        {
                            b1.Property<Guid>("TraineeId")
                                .HasColumnType("uuid")
                                .HasColumnName("id");

                            b1.Property<decimal>("Height")
                                .HasColumnType("numeric")
                                .HasColumnName("measurements_height");

                            b1.Property<decimal>("Weight")
                                .HasColumnType("numeric")
                                .HasColumnName("measurements_weight");

                            b1.HasKey("TraineeId");

                            b1.ToTable("trainees");

                            b1.WithOwner()
                                .HasForeignKey("TraineeId")
                                .HasConstraintName("fk_trainees_trainees_id");
                        });

                    b.OwnsOne("UFit.Domain.Trainees.Name", "Name", b1 =>
                        {
                            b1.Property<Guid>("TraineeId")
                                .HasColumnType("uuid")
                                .HasColumnName("id");

                            b1.Property<string>("First")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("name_first");

                            b1.Property<string>("Last")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("name_last");

                            b1.HasKey("TraineeId");

                            b1.ToTable("trainees");

                            b1.WithOwner()
                                .HasForeignKey("TraineeId")
                                .HasConstraintName("fk_trainees_trainees_id");
                        });

                    b.Navigation("Measurements")
                        .IsRequired();

                    b.Navigation("Name")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
